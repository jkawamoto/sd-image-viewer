// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "SD Image Viewer API",
    "version": "2023-04-27"
  },
  "host": "localhost:8080",
  "basePath": "/api/v1",
  "paths": {
    "/checkpoints": {
      "get": {
        "description": "Get a list of checkpoints.",
        "operationId": "getCheckpoints",
        "responses": {
          "200": {
            "description": "A list of checkpoint names.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error Response",
            "schema": {
              "$ref": "#/definitions/StandardError"
            }
          }
        }
      }
    },
    "/image/{id}": {
      "get": {
        "description": "Get an image.",
        "produces": [
          "image/png",
          "application/json"
        ],
        "operationId": "getImage",
        "parameters": [
          {
            "type": "string",
            "description": "ID of the image file.",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "If-Modified-Since",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Requested image file.",
            "schema": {
              "type": "file"
            },
            "headers": {
              "Cache-Control": {
                "type": "string"
              },
              "Last-Modified": {
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Requested image is not modified."
          },
          "default": {
            "description": "Error Response",
            "schema": {
              "$ref": "#/definitions/StandardError"
            }
          }
        }
      }
    },
    "/images": {
      "get": {
        "description": "List images.",
        "operationId": "getImages",
        "parameters": [
          {
            "type": "string",
            "description": "Search query.",
            "name": "query",
            "in": "query"
          },
          {
            "enum": [
              "small",
              "medium",
              "large"
            ],
            "type": "string",
            "description": "Retrieving the given sized images.",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Retrieving images that use the given checkpoint.",
            "name": "checkpoint",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "Retrieving images created before the given date time.",
            "name": "before",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "Retrieving images created after the given date time.",
            "name": "after",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "The number of items one page has at most.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Requesting page number.",
            "name": "page",
            "in": "query"
          },
          {
            "enum": [
              "asc",
              "desc"
            ],
            "type": "string",
            "default": "desc",
            "name": "order",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of images.",
            "schema": {
              "$ref": "#/definitions/ImageList"
            }
          },
          "default": {
            "description": "Error Response",
            "schema": {
              "$ref": "#/definitions/StandardError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Image": {
      "required": [
        "id"
      ],
      "properties": {
        "checkpoint": {
          "type": "string"
        },
        "creation-time": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "description": "ID of the image file.",
          "type": "string"
        },
        "negative-prompt": {
          "type": "string"
        },
        "pixel": {
          "type": "integer"
        },
        "prompt": {
          "type": "string"
        }
      },
      "additionalProperties": true
    },
    "ImageList": {
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Image"
          }
        },
        "metadata": {
          "$ref": "#/definitions/Metadata"
        }
      }
    },
    "Metadata": {
      "required": [
        "currentPage",
        "totalPages",
        "totalItems"
      ],
      "properties": {
        "currentPage": {
          "description": "The the current page you are at.",
          "type": "integer",
          "example": 2
        },
        "totalItems": {
          "description": "The total number of items available.",
          "type": "integer",
          "format": "int",
          "example": 46
        },
        "totalPages": {
          "description": "The total number of pages.",
          "type": "integer",
          "example": 16
        }
      }
    },
    "StandardError": {
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "description": "The error message.",
          "type": "string"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "SD Image Viewer API",
    "version": "2023-04-27"
  },
  "host": "localhost:8080",
  "basePath": "/api/v1",
  "paths": {
    "/checkpoints": {
      "get": {
        "description": "Get a list of checkpoints.",
        "operationId": "getCheckpoints",
        "responses": {
          "200": {
            "description": "A list of checkpoint names.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error Response",
            "schema": {
              "$ref": "#/definitions/StandardError"
            }
          }
        }
      }
    },
    "/image/{id}": {
      "get": {
        "description": "Get an image.",
        "produces": [
          "application/json",
          "image/png"
        ],
        "operationId": "getImage",
        "parameters": [
          {
            "type": "string",
            "description": "ID of the image file.",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "If-Modified-Since",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Requested image file.",
            "schema": {
              "type": "file"
            },
            "headers": {
              "Cache-Control": {
                "type": "string"
              },
              "Last-Modified": {
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Requested image is not modified."
          },
          "default": {
            "description": "Error Response",
            "schema": {
              "$ref": "#/definitions/StandardError"
            }
          }
        }
      }
    },
    "/images": {
      "get": {
        "description": "List images.",
        "operationId": "getImages",
        "parameters": [
          {
            "type": "string",
            "description": "Search query.",
            "name": "query",
            "in": "query"
          },
          {
            "enum": [
              "small",
              "medium",
              "large"
            ],
            "type": "string",
            "description": "Retrieving the given sized images.",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Retrieving images that use the given checkpoint.",
            "name": "checkpoint",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "Retrieving images created before the given date time.",
            "name": "before",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "Retrieving images created after the given date time.",
            "name": "after",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "The number of items one page has at most.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Requesting page number.",
            "name": "page",
            "in": "query"
          },
          {
            "enum": [
              "asc",
              "desc"
            ],
            "type": "string",
            "default": "desc",
            "name": "order",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of images.",
            "schema": {
              "$ref": "#/definitions/ImageList"
            }
          },
          "default": {
            "description": "Error Response",
            "schema": {
              "$ref": "#/definitions/StandardError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Image": {
      "required": [
        "id"
      ],
      "properties": {
        "checkpoint": {
          "type": "string"
        },
        "creation-time": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "description": "ID of the image file.",
          "type": "string"
        },
        "negative-prompt": {
          "type": "string"
        },
        "pixel": {
          "type": "integer"
        },
        "prompt": {
          "type": "string"
        }
      },
      "additionalProperties": true
    },
    "ImageList": {
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Image"
          }
        },
        "metadata": {
          "$ref": "#/definitions/Metadata"
        }
      }
    },
    "Metadata": {
      "required": [
        "currentPage",
        "totalPages",
        "totalItems"
      ],
      "properties": {
        "currentPage": {
          "description": "The the current page you are at.",
          "type": "integer",
          "example": 2
        },
        "totalItems": {
          "description": "The total number of items available.",
          "type": "integer",
          "format": "int",
          "example": 46
        },
        "totalPages": {
          "description": "The total number of pages.",
          "type": "integer",
          "example": 16
        }
      }
    },
    "StandardError": {
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "description": "The error message.",
          "type": "string"
        }
      }
    }
  }
}`))
}
